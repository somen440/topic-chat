syntax = "proto3";

package topicchat;

message Empty {}

message User {
  string id = 1;
  string name = 2;
  bool loggedIn = 3;
}

message Topic {
  int32 id = 1;
  string name = 2;
}

// -------------------- Auth --------------------

service AuthService {
  rpc Join(JoinRequest) returns (User) {}
  rpc LoggedIn(LoggedInRequest) returns (User) {}
  rpc Signout(SignoutRequest) returns (Empty) {}
  rpc GetUser(GetUserRequest) returns (User) {}
}

message JoinRequest {
  string name = 1;
}

message LoggedInRequest {
  string user_id = 1;
}

message SignoutRequest {
  string user_id = 1;
}

message GetUserRequest {
  string user_id = 1;
}

// -------------------- Chat --------------------

service ChatService {
  // ---- Message ----
  rpc RecvMessage(RecvMessageRequest) returns (stream ChatMessage);
  rpc SendMessage(SendMessageRequest) returns (Empty);

  // ---- Room ----
  rpc CreateRoom(CreateRoomRequest) returns (Empty) {}
  rpc ListRoom(Empty) returns (ListRoomResponse) {}
}

message ChatMessage {
  string text = 1;
  User user = 2;
}

message Room {
  int32 topic_id = 1;
}

message CreateRoomRequest {
  int32 topic_id = 1;
}

message RecvMessageRequest {
  int32 topic_id = 1;
  User user = 2;
}

message SendMessageRequest {
  int32 topic_id = 1;
  ChatMessage message = 2;
}

message ListRoomResponse {
  repeated Room rooms = 1;
}

// -------------------- Topic Catalog --------------------

service TopicCatalogService {
  rpc ListTopics(Empty) returns (ListTopicsResponse) {}
  rpc GetTopic(GetTopicRequest) returns (Topic) {}
//  rpc SearchTopics(SearchTopicsRequest) returns (SearchTopicsResponse) {}
}

message ListTopicsResponse {
  repeated Topic topics = 1;
}

message GetTopicRequest {
  string id = 1;
}
