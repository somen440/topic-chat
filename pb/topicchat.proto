syntax = "proto3";

package topicchat;

message Empty {}

message User {
  int32 id = 1;
  string name = 2;
  bool loggedIn = 3;
  // avator
}

message Topic {
  int32 id = 1;
  string name = 2;
  // todo: image
  // todo: description
  // todo: member_num
  // todo: msg_num
  // todo: updated_at
}

message ChatMessage {
  string text = 1;
  User user = 2;
  // todo: actioned_at
}

message Room {
  int32 topic_id = 1;
}

// -------------------- Auth --------------------

service AuthService {
  rpc Join(JoinRequest) returns (User) {}
  rpc LoggedIn(LoggedInRequest) returns (User) {}
  rpc Signout(SignoutRequest) returns (Empty) {}
  rpc GetUser(GetUserRequest) returns (User) {}
  rpc GetUserAll(Empty) returns (GetUserAllResponse) {}
}

message JoinRequest {
  string name = 1;
}

message LoggedInRequest {
  int32 user_id = 1;
}

message SignoutRequest {
  int32 user_id = 1;
}

message GetUserRequest {
  int32 user_id = 1;
}

message GetUserAllResponse {
  repeated User users = 1;
}

// -------------------- Chat --------------------

service ChatService {
  // ---- Message ----
  rpc RecvMessage(RecvMessageRequest) returns (stream ChatMessage);
  rpc SendMessage(SendMessageRequest) returns (Empty);

  // ---- Room ----
  rpc CreateRoom(CreateRoomRequest) returns (Empty);
  rpc JoinRoom(JoinRoomRequest) returns (JoinRoomResponse);
}

message CreateRoomRequest {
  int32 topic_id = 1;
}

message RecvMessageRequest {
  int32 topic_id = 1;
  int32 user_id = 2;
}

message SendMessageRequest {
  int32 topic_id = 1;
  ChatMessage message = 2;
}

message JoinRoomRequest {
  int32 user_id = 1;
  int32 topic_id = 2;
}

message JoinRoomResponse {
  Topic topic = 1;
  User person = 2;
  repeated User member = 3;
}

// -------------------- Topic Catalog --------------------

service TopicCatalogService {
  rpc ListTopics(Empty) returns (ListTopicsResponse) {}
  rpc GetTopic(GetTopicRequest) returns (Topic) {}
  // todo: add
  // todo: delete
  // todo: update
  // todo: rpc SearchTopics(SearchTopicsRequest) returns (SearchTopicsResponse) {}
}

message ListTopicsResponse {
  repeated Topic topics = 1;
}

message GetTopicRequest {
  int32 topic_id = 1;
}
