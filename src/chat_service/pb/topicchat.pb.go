// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/topicchat.proto

package topicchat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LoggedIn             bool     `protobuf:"varint,3,opt,name=loggedIn,proto3" json:"loggedIn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetLoggedIn() bool {
	if m != nil {
		return m.LoggedIn
	}
	return false
}

type Topic struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{2}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Topic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ChatMessage struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{3}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ChatMessage) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Room struct {
	TopicId              int32    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{4}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

type JoinRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{5}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LoggedInRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggedInRequest) Reset()         { *m = LoggedInRequest{} }
func (m *LoggedInRequest) String() string { return proto.CompactTextString(m) }
func (*LoggedInRequest) ProtoMessage()    {}
func (*LoggedInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{6}
}

func (m *LoggedInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggedInRequest.Unmarshal(m, b)
}
func (m *LoggedInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggedInRequest.Marshal(b, m, deterministic)
}
func (m *LoggedInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggedInRequest.Merge(m, src)
}
func (m *LoggedInRequest) XXX_Size() int {
	return xxx_messageInfo_LoggedInRequest.Size(m)
}
func (m *LoggedInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggedInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoggedInRequest proto.InternalMessageInfo

func (m *LoggedInRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type SignoutRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignoutRequest) Reset()         { *m = SignoutRequest{} }
func (m *SignoutRequest) String() string { return proto.CompactTextString(m) }
func (*SignoutRequest) ProtoMessage()    {}
func (*SignoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{7}
}

func (m *SignoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignoutRequest.Unmarshal(m, b)
}
func (m *SignoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignoutRequest.Marshal(b, m, deterministic)
}
func (m *SignoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignoutRequest.Merge(m, src)
}
func (m *SignoutRequest) XXX_Size() int {
	return xxx_messageInfo_SignoutRequest.Size(m)
}
func (m *SignoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignoutRequest proto.InternalMessageInfo

func (m *SignoutRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{8}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserAllResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserAllResponse) Reset()         { *m = GetUserAllResponse{} }
func (m *GetUserAllResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserAllResponse) ProtoMessage()    {}
func (*GetUserAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{9}
}

func (m *GetUserAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserAllResponse.Unmarshal(m, b)
}
func (m *GetUserAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserAllResponse.Marshal(b, m, deterministic)
}
func (m *GetUserAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserAllResponse.Merge(m, src)
}
func (m *GetUserAllResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserAllResponse.Size(m)
}
func (m *GetUserAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserAllResponse proto.InternalMessageInfo

func (m *GetUserAllResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type CreateRoomRequest struct {
	TopicId              int32    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoomRequest) Reset()         { *m = CreateRoomRequest{} }
func (m *CreateRoomRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRoomRequest) ProtoMessage()    {}
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{10}
}

func (m *CreateRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoomRequest.Unmarshal(m, b)
}
func (m *CreateRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoomRequest.Marshal(b, m, deterministic)
}
func (m *CreateRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoomRequest.Merge(m, src)
}
func (m *CreateRoomRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRoomRequest.Size(m)
}
func (m *CreateRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoomRequest proto.InternalMessageInfo

func (m *CreateRoomRequest) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

type RecvMessageRequest struct {
	TopicId              int32    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvMessageRequest) Reset()         { *m = RecvMessageRequest{} }
func (m *RecvMessageRequest) String() string { return proto.CompactTextString(m) }
func (*RecvMessageRequest) ProtoMessage()    {}
func (*RecvMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{11}
}

func (m *RecvMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvMessageRequest.Unmarshal(m, b)
}
func (m *RecvMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvMessageRequest.Marshal(b, m, deterministic)
}
func (m *RecvMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvMessageRequest.Merge(m, src)
}
func (m *RecvMessageRequest) XXX_Size() int {
	return xxx_messageInfo_RecvMessageRequest.Size(m)
}
func (m *RecvMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecvMessageRequest proto.InternalMessageInfo

func (m *RecvMessageRequest) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *RecvMessageRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type SendMessageRequest struct {
	TopicId              int32        `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Message              *ChatMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{12}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *SendMessageRequest) GetMessage() *ChatMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type JoinRoomRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TopicId              int32    `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRoomRequest) Reset()         { *m = JoinRoomRequest{} }
func (m *JoinRoomRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRoomRequest) ProtoMessage()    {}
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{13}
}

func (m *JoinRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomRequest.Unmarshal(m, b)
}
func (m *JoinRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomRequest.Marshal(b, m, deterministic)
}
func (m *JoinRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomRequest.Merge(m, src)
}
func (m *JoinRoomRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRoomRequest.Size(m)
}
func (m *JoinRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomRequest proto.InternalMessageInfo

func (m *JoinRoomRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *JoinRoomRequest) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

type JoinRoomResponse struct {
	Topic                *Topic   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Person               *User    `protobuf:"bytes,2,opt,name=person,proto3" json:"person,omitempty"`
	Member               []*User  `protobuf:"bytes,3,rep,name=member,proto3" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRoomResponse) Reset()         { *m = JoinRoomResponse{} }
func (m *JoinRoomResponse) String() string { return proto.CompactTextString(m) }
func (*JoinRoomResponse) ProtoMessage()    {}
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{14}
}

func (m *JoinRoomResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRoomResponse.Unmarshal(m, b)
}
func (m *JoinRoomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRoomResponse.Marshal(b, m, deterministic)
}
func (m *JoinRoomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRoomResponse.Merge(m, src)
}
func (m *JoinRoomResponse) XXX_Size() int {
	return xxx_messageInfo_JoinRoomResponse.Size(m)
}
func (m *JoinRoomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRoomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRoomResponse proto.InternalMessageInfo

func (m *JoinRoomResponse) GetTopic() *Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *JoinRoomResponse) GetPerson() *User {
	if m != nil {
		return m.Person
	}
	return nil
}

func (m *JoinRoomResponse) GetMember() []*User {
	if m != nil {
		return m.Member
	}
	return nil
}

type ListTopicsResponse struct {
	Topics               []*Topic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTopicsResponse) Reset()         { *m = ListTopicsResponse{} }
func (m *ListTopicsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTopicsResponse) ProtoMessage()    {}
func (*ListTopicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{15}
}

func (m *ListTopicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTopicsResponse.Unmarshal(m, b)
}
func (m *ListTopicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTopicsResponse.Marshal(b, m, deterministic)
}
func (m *ListTopicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTopicsResponse.Merge(m, src)
}
func (m *ListTopicsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTopicsResponse.Size(m)
}
func (m *ListTopicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTopicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTopicsResponse proto.InternalMessageInfo

func (m *ListTopicsResponse) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

type GetTopicRequest struct {
	TopicId              int32    `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicRequest) Reset()         { *m = GetTopicRequest{} }
func (m *GetTopicRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopicRequest) ProtoMessage()    {}
func (*GetTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c4a8088c4bf324, []int{16}
}

func (m *GetTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicRequest.Unmarshal(m, b)
}
func (m *GetTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicRequest.Marshal(b, m, deterministic)
}
func (m *GetTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicRequest.Merge(m, src)
}
func (m *GetTopicRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopicRequest.Size(m)
}
func (m *GetTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicRequest proto.InternalMessageInfo

func (m *GetTopicRequest) GetTopicId() int32 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "topicchat.Empty")
	proto.RegisterType((*User)(nil), "topicchat.User")
	proto.RegisterType((*Topic)(nil), "topicchat.Topic")
	proto.RegisterType((*ChatMessage)(nil), "topicchat.ChatMessage")
	proto.RegisterType((*Room)(nil), "topicchat.Room")
	proto.RegisterType((*JoinRequest)(nil), "topicchat.JoinRequest")
	proto.RegisterType((*LoggedInRequest)(nil), "topicchat.LoggedInRequest")
	proto.RegisterType((*SignoutRequest)(nil), "topicchat.SignoutRequest")
	proto.RegisterType((*GetUserRequest)(nil), "topicchat.GetUserRequest")
	proto.RegisterType((*GetUserAllResponse)(nil), "topicchat.GetUserAllResponse")
	proto.RegisterType((*CreateRoomRequest)(nil), "topicchat.CreateRoomRequest")
	proto.RegisterType((*RecvMessageRequest)(nil), "topicchat.RecvMessageRequest")
	proto.RegisterType((*SendMessageRequest)(nil), "topicchat.SendMessageRequest")
	proto.RegisterType((*JoinRoomRequest)(nil), "topicchat.JoinRoomRequest")
	proto.RegisterType((*JoinRoomResponse)(nil), "topicchat.JoinRoomResponse")
	proto.RegisterType((*ListTopicsResponse)(nil), "topicchat.ListTopicsResponse")
	proto.RegisterType((*GetTopicRequest)(nil), "topicchat.GetTopicRequest")
}

func init() { proto.RegisterFile("pb/topicchat.proto", fileDescriptor_f7c4a8088c4bf324) }

var fileDescriptor_f7c4a8088c4bf324 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5d, 0x8f, 0xd2, 0x4c,
	0x14, 0xa6, 0x5d, 0xa0, 0xe5, 0x34, 0x59, 0xf6, 0x3d, 0x6f, 0xa2, 0x6c, 0xd5, 0x84, 0x1d, 0xa3,
	0xe2, 0x47, 0x70, 0xc5, 0x0b, 0x3f, 0xb3, 0x9b, 0x0d, 0x59, 0x56, 0xcc, 0x7a, 0x53, 0xf4, 0xda,
	0x14, 0x3a, 0x81, 0x26, 0xf4, 0xc3, 0xce, 0xb0, 0xd1, 0xff, 0xe0, 0x95, 0x57, 0xfe, 0x0b, 0xff,
	0xa2, 0xe9, 0xb4, 0xa5, 0x53, 0x5a, 0x84, 0xbb, 0x0e, 0xcf, 0xf9, 0x78, 0xce, 0x33, 0xe7, 0x19,
	0x00, 0xc3, 0xe9, 0x73, 0x1e, 0x84, 0xee, 0x6c, 0xb6, 0xb0, 0x79, 0x3f, 0x8c, 0x02, 0x1e, 0x60,
	0x6b, 0xfd, 0x03, 0xd1, 0xa0, 0x71, 0xe9, 0x85, 0xfc, 0x07, 0x19, 0x41, 0xfd, 0x0b, 0xa3, 0x11,
	0x1e, 0x82, 0xea, 0x3a, 0x1d, 0xa5, 0xab, 0xf4, 0x1a, 0x96, 0xea, 0x3a, 0x88, 0x50, 0xf7, 0x6d,
	0x8f, 0x76, 0xd4, 0xae, 0xd2, 0x6b, 0x59, 0xe2, 0x1b, 0x4d, 0xd0, 0x97, 0xc1, 0x7c, 0x4e, 0x9d,
	0xb1, 0xdf, 0x39, 0xe8, 0x2a, 0x3d, 0xdd, 0x5a, 0x9f, 0xc9, 0x53, 0x68, 0x7c, 0x8e, 0xab, 0xef,
	0x53, 0x88, 0x8c, 0xc0, 0x18, 0x2e, 0x6c, 0xfe, 0x89, 0x32, 0x66, 0xcf, 0x69, 0x1c, 0xc2, 0xe9,
	0x77, 0x2e, 0x92, 0x5a, 0x96, 0xf8, 0xc6, 0xfb, 0x50, 0x5f, 0x31, 0x1a, 0x89, 0x34, 0x63, 0xd0,
	0xee, 0xe7, 0xb3, 0xc4, 0x74, 0x2d, 0x01, 0x92, 0x13, 0xa8, 0x5b, 0x41, 0xe0, 0xe1, 0x31, 0xe8,
	0x02, 0xff, 0xba, 0xee, 0xac, 0x89, 0xf3, 0xd8, 0x21, 0x27, 0x60, 0x7c, 0x0c, 0x5c, 0xdf, 0xa2,
	0xdf, 0x56, 0x94, 0xf1, 0x35, 0x1b, 0x45, 0x62, 0xf3, 0x04, 0xda, 0xd7, 0xe9, 0x18, 0x59, 0xd8,
	0x6d, 0xd0, 0xe2, 0x06, 0x79, 0xbd, 0x66, 0x7c, 0x1c, 0x3b, 0xe4, 0x31, 0x1c, 0x4e, 0xdc, 0xb9,
	0x1f, 0xac, 0xf8, 0x3e, 0xa1, 0x57, 0x94, 0x0b, 0xb6, 0xbb, 0x42, 0xdf, 0x01, 0xa6, 0xa1, 0x17,
	0xcb, 0xa5, 0x45, 0x59, 0x18, 0xf8, 0x8c, 0xe2, 0x03, 0x68, 0xc4, 0x38, 0xeb, 0x28, 0xdd, 0x83,
	0x2a, 0x0d, 0x12, 0x94, 0xf4, 0xe1, 0xbf, 0x61, 0x44, 0x6d, 0x4e, 0x63, 0x29, 0xb2, 0x56, 0xff,
	0x50, 0xe4, 0x03, 0xa0, 0x45, 0x67, 0x37, 0xa9, 0xf8, 0xbb, 0x13, 0x64, 0xda, 0x6a, 0x81, 0xb6,
	0x0d, 0x38, 0xa1, 0xbe, 0xb3, 0x7f, 0xa5, 0x53, 0xd0, 0xbc, 0x24, 0x38, 0xbd, 0xd7, 0x5b, 0xd2,
	0x4c, 0xd2, 0x46, 0x58, 0x59, 0x18, 0xb9, 0x84, 0xb6, 0xb8, 0x3e, 0x69, 0xb4, 0x6d, 0x2a, 0x16,
	0x1a, 0xab, 0xc5, 0x99, 0x7f, 0x2a, 0x70, 0x94, 0xd7, 0x49, 0xf5, 0x7d, 0x08, 0x0d, 0x81, 0x8b,
	0x32, 0xc6, 0xe0, 0x48, 0xe2, 0x22, 0x56, 0xd9, 0x4a, 0x60, 0x7c, 0x04, 0xcd, 0x90, 0x46, 0x2c,
	0xf0, 0xb7, 0x2d, 0x63, 0x0a, 0xc7, 0x81, 0x1e, 0xf5, 0xa6, 0x34, 0xea, 0x1c, 0x54, 0xdf, 0x58,
	0x0a, 0x93, 0x33, 0xc0, 0x6b, 0x97, 0x71, 0xd1, 0x85, 0xad, 0xf9, 0xf4, 0xa0, 0x29, 0xe2, 0xb3,
	0x0b, 0x2f, 0x13, 0x4a, 0x71, 0xf2, 0x0c, 0xda, 0x57, 0x34, 0x49, 0xdf, 0xad, 0xfa, 0xe0, 0x8f,
	0x0a, 0xc6, 0xc5, 0x8a, 0x2f, 0x26, 0x34, 0xba, 0x71, 0x67, 0x14, 0x5f, 0x40, 0x3d, 0xd6, 0x02,
	0x65, 0xf1, 0x25, 0x8f, 0x98, 0x9b, 0xb4, 0x49, 0x0d, 0xdf, 0x80, 0x9e, 0x59, 0x04, 0x4d, 0x09,
	0xde, 0xf0, 0x4d, 0x55, 0xea, 0x6b, 0xd0, 0x52, 0xc7, 0xe0, 0xb1, 0x84, 0x16, 0x5d, 0x64, 0xca,
	0xb3, 0x26, 0x0f, 0x53, 0x0d, 0x5f, 0x81, 0x96, 0xba, 0xa2, 0x90, 0x59, 0x34, 0x55, 0x55, 0xcb,
	0x73, 0x80, 0xdc, 0x4e, 0x58, 0x2a, 0x6d, 0xde, 0x2b, 0x57, 0x93, 0x7c, 0x47, 0x6a, 0x83, 0xdf,
	0x6a, 0xf2, 0x40, 0x65, 0x8a, 0x8d, 0xc0, 0x90, 0x2c, 0x83, 0x72, 0x7e, 0xd9, 0x4a, 0xe6, 0x96,
	0xa5, 0x3e, 0x55, 0xf0, 0x0c, 0x0c, 0xc9, 0x30, 0x85, 0x3a, 0x65, 0x23, 0x95, 0x35, 0xc1, 0xf7,
	0x00, 0xb9, 0xd5, 0xf1, 0xae, 0xdc, 0x67, 0xf3, 0x05, 0xa8, 0xc8, 0x1e, 0x82, 0x9e, 0x79, 0xa0,
	0x70, 0x89, 0x1b, 0x06, 0x33, 0xef, 0x54, 0x62, 0x89, 0x38, 0x83, 0x5f, 0x0a, 0xfc, 0x2f, 0x16,
	0x6f, 0x68, 0x73, 0x7b, 0x19, 0xcc, 0x33, 0x89, 0xce, 0x01, 0xf2, 0x95, 0xde, 0xa1, 0x79, 0x79,
	0xf7, 0x49, 0x0d, 0xdf, 0x82, 0x9e, 0xed, 0x74, 0x81, 0xdd, 0xc6, 0xa2, 0x9b, 0x25, 0x57, 0x90,
	0xda, 0xb4, 0x29, 0xfe, 0xdf, 0x5e, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x59, 0xac, 0xe1, 0x40,
	0xf5, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*User, error)
	LoggedIn(ctx context.Context, in *LoggedInRequest, opts ...grpc.CallOption) (*User, error)
	Signout(ctx context.Context, in *SignoutRequest, opts ...grpc.CallOption) (*Empty, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	GetUserAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserAllResponse, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/topicchat.AuthService/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) LoggedIn(ctx context.Context, in *LoggedInRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/topicchat.AuthService/LoggedIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Signout(ctx context.Context, in *SignoutRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/topicchat.AuthService/Signout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/topicchat.AuthService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetUserAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserAllResponse, error) {
	out := new(GetUserAllResponse)
	err := c.cc.Invoke(ctx, "/topicchat.AuthService/GetUserAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Join(context.Context, *JoinRequest) (*User, error)
	LoggedIn(context.Context, *LoggedInRequest) (*User, error)
	Signout(context.Context, *SignoutRequest) (*Empty, error)
	GetUser(context.Context, *GetUserRequest) (*User, error)
	GetUserAll(context.Context, *Empty) (*GetUserAllResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Join(ctx context.Context, req *JoinRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedAuthServiceServer) LoggedIn(ctx context.Context, req *LoggedInRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoggedIn not implemented")
}
func (*UnimplementedAuthServiceServer) Signout(ctx context.Context, req *SignoutRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signout not implemented")
}
func (*UnimplementedAuthServiceServer) GetUser(ctx context.Context, req *GetUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedAuthServiceServer) GetUserAll(ctx context.Context, req *Empty) (*GetUserAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAll not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.AuthService/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_LoggedIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoggedInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).LoggedIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.AuthService/LoggedIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).LoggedIn(ctx, req.(*LoggedInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Signout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Signout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.AuthService/Signout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Signout(ctx, req.(*SignoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.AuthService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetUserAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetUserAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.AuthService/GetUserAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetUserAll(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topicchat.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _AuthService_Join_Handler,
		},
		{
			MethodName: "LoggedIn",
			Handler:    _AuthService_LoggedIn_Handler,
		},
		{
			MethodName: "Signout",
			Handler:    _AuthService_Signout_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _AuthService_GetUser_Handler,
		},
		{
			MethodName: "GetUserAll",
			Handler:    _AuthService_GetUserAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/topicchat.proto",
}

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	// ---- Message ----
	RecvMessage(ctx context.Context, in *RecvMessageRequest, opts ...grpc.CallOption) (ChatService_RecvMessageClient, error)
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*Empty, error)
	// ---- Room ----
	CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*Empty, error)
	JoinRoom(ctx context.Context, in *JoinRoomRequest, opts ...grpc.CallOption) (*JoinRoomResponse, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) RecvMessage(ctx context.Context, in *RecvMessageRequest, opts ...grpc.CallOption) (ChatService_RecvMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/topicchat.ChatService/RecvMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceRecvMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_RecvMessageClient interface {
	Recv() (*ChatMessage, error)
	grpc.ClientStream
}

type chatServiceRecvMessageClient struct {
	grpc.ClientStream
}

func (x *chatServiceRecvMessageClient) Recv() (*ChatMessage, error) {
	m := new(ChatMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/topicchat.ChatService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) CreateRoom(ctx context.Context, in *CreateRoomRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/topicchat.ChatService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) JoinRoom(ctx context.Context, in *JoinRoomRequest, opts ...grpc.CallOption) (*JoinRoomResponse, error) {
	out := new(JoinRoomResponse)
	err := c.cc.Invoke(ctx, "/topicchat.ChatService/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	// ---- Message ----
	RecvMessage(*RecvMessageRequest, ChatService_RecvMessageServer) error
	SendMessage(context.Context, *SendMessageRequest) (*Empty, error)
	// ---- Room ----
	CreateRoom(context.Context, *CreateRoomRequest) (*Empty, error)
	JoinRoom(context.Context, *JoinRoomRequest) (*JoinRoomResponse, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) RecvMessage(req *RecvMessageRequest, srv ChatService_RecvMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method RecvMessage not implemented")
}
func (*UnimplementedChatServiceServer) SendMessage(ctx context.Context, req *SendMessageRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedChatServiceServer) CreateRoom(ctx context.Context, req *CreateRoomRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedChatServiceServer) JoinRoom(ctx context.Context, req *JoinRoomRequest) (*JoinRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_RecvMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RecvMessageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).RecvMessage(m, &chatServiceRecvMessageServer{stream})
}

type ChatService_RecvMessageServer interface {
	Send(*ChatMessage) error
	grpc.ServerStream
}

type chatServiceRecvMessageServer struct {
	grpc.ServerStream
}

func (x *chatServiceRecvMessageServer) Send(m *ChatMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.ChatService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.ChatService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).CreateRoom(ctx, req.(*CreateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.ChatService/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).JoinRoom(ctx, req.(*JoinRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topicchat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _ChatService_SendMessage_Handler,
		},
		{
			MethodName: "CreateRoom",
			Handler:    _ChatService_CreateRoom_Handler,
		},
		{
			MethodName: "JoinRoom",
			Handler:    _ChatService_JoinRoom_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecvMessage",
			Handler:       _ChatService_RecvMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/topicchat.proto",
}

// TopicCatalogServiceClient is the client API for TopicCatalogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopicCatalogServiceClient interface {
	ListTopics(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListTopicsResponse, error)
	GetTopic(ctx context.Context, in *GetTopicRequest, opts ...grpc.CallOption) (*Topic, error)
}

type topicCatalogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTopicCatalogServiceClient(cc grpc.ClientConnInterface) TopicCatalogServiceClient {
	return &topicCatalogServiceClient{cc}
}

func (c *topicCatalogServiceClient) ListTopics(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListTopicsResponse, error) {
	out := new(ListTopicsResponse)
	err := c.cc.Invoke(ctx, "/topicchat.TopicCatalogService/ListTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicCatalogServiceClient) GetTopic(ctx context.Context, in *GetTopicRequest, opts ...grpc.CallOption) (*Topic, error) {
	out := new(Topic)
	err := c.cc.Invoke(ctx, "/topicchat.TopicCatalogService/GetTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopicCatalogServiceServer is the server API for TopicCatalogService service.
type TopicCatalogServiceServer interface {
	ListTopics(context.Context, *Empty) (*ListTopicsResponse, error)
	GetTopic(context.Context, *GetTopicRequest) (*Topic, error)
}

// UnimplementedTopicCatalogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTopicCatalogServiceServer struct {
}

func (*UnimplementedTopicCatalogServiceServer) ListTopics(ctx context.Context, req *Empty) (*ListTopicsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTopics not implemented")
}
func (*UnimplementedTopicCatalogServiceServer) GetTopic(ctx context.Context, req *GetTopicRequest) (*Topic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopic not implemented")
}

func RegisterTopicCatalogServiceServer(s *grpc.Server, srv TopicCatalogServiceServer) {
	s.RegisterService(&_TopicCatalogService_serviceDesc, srv)
}

func _TopicCatalogService_ListTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicCatalogServiceServer).ListTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.TopicCatalogService/ListTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicCatalogServiceServer).ListTopics(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicCatalogService_GetTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicCatalogServiceServer).GetTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/topicchat.TopicCatalogService/GetTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicCatalogServiceServer).GetTopic(ctx, req.(*GetTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopicCatalogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "topicchat.TopicCatalogService",
	HandlerType: (*TopicCatalogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTopics",
			Handler:    _TopicCatalogService_ListTopics_Handler,
		},
		{
			MethodName: "GetTopic",
			Handler:    _TopicCatalogService_GetTopic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/topicchat.proto",
}
